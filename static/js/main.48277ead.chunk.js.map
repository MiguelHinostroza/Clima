{"version":3,"sources":["utils/http.util.ts","services/air.http.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Http","axios","create","baseURL","interceptors","request","use","url","includes","response","data","error","Promise","reject","AirHttp","country","a","get","res","console","log","instance","airHttp","getInstance","useStyles","makeStyles","theme","rain","minWidth","minHeight","backgroundImage","backgroundSize","color","display","justifyContent","alignItems","padding","spacing","sunny","img","itemDown","textAlign","subItemDown","subItemDown2","icon","footer","position","left","bottom","width","header","top","right","header2","borderContainer","border","borderRadius","App","useState","nearestCity","setNearestCity","classes","useTheme","isSm","useMediaQuery","breakpoints","down","handleInit","getNearestCity","isRain","current","weather","hu","useEffect","Grid","container","className","item","xs","md","Typography","variant","align","city","moment","ts","format","tp","Box","src","ic","height","alt","ws","pr","location","coordinates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48277ead.chunk.js","sourcesContent":["import axios, {AxiosError, AxiosRequestConfig, AxiosResponse} from \"axios\";\n\nconst KEY = '774a8892-a972-4dfc-8ca0-b7cf4263f0d4';\n\nconst Http = axios.create(\n    {baseURL: 'https://api.airvisual.com/v2/'}\n)\n\nconst requestInterceptor = (request: AxiosRequestConfig) => {\n    request.url = `${request.url}${request.url?.includes('?') ? '&' : '?'}key=${KEY}`\n    return request;\n}\n\nconst responseInterceptor = (response: AxiosResponse) => {\n    let responseProcessed = response.data.data ?? response.data ?? response;\n    return responseProcessed;\n}\n\nconst errorInterceptor = (error: AxiosError) => {\n    return Promise.reject(error);\n}\n\nHttp.interceptors.request.use(requestInterceptor);\nHttp.interceptors.response.use(responseInterceptor, errorInterceptor);\n\nexport default Http;\n","import {States} from \"../models/State\";\nimport Http from \"../utils/http.util\";\nimport {NearestCity} from \"../models/NearestCity\";\n\nexport default class AirHttp {\n    public static instance: AirHttp\n\n    private constructor() {\n    }\n\n    public static getInstance(): AirHttp {\n        if (!AirHttp.instance) {\n            AirHttp.instance = new AirHttp();\n        }\n        return AirHttp.instance;\n\n    }\n\n    async getStates(country: string): Promise<States> {\n        const res: States = await Http.get(`states?country=${country}`);\n        console.log(res);\n        return res;\n    }\n\n    async getNearestCity(): Promise<NearestCity> {\n        const res: NearestCity = await Http.get('nearest_city');\n        console.log(res);\n        return res;\n    }\n\n\n}\n\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport AirHttp from \"./services/air.http\";\nimport {Box, Grid, makeStyles, Typography, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport moment from \"moment/moment\";\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\n\nconst airHttp = AirHttp.getInstance()\n\n\nconst useStyles = makeStyles(theme => ({\n    rain: {\n        minWidth: '100%',\n        minHeight: '100vh',\n        //backgroundColor: '#35baf6',\n        //backgroundImage: `url(https://3.bp.blogspot.com/-PyLlGSnX8vk/W8XH9eB12vI/AAAAAAADoIQ/mm4frv5dNW0gDzUOtjS6cNa2veuZN2eigCLcBGAs/s640/gif-lluvia-7.gif)`,\n        backgroundImage: `url(https://thumbs.gfycat.com/EmbarrassedObedientIncatern-size_restricted.gif)`,\n        //backgroundImage: `url(https://i.gifer.com/fyDi.gif)`,\n        //backgroundImage: `url(https://i.gifer.com/1pX9.gif)`,\n        //backgroundImage: `url(https://wallegend.net/gif/429.gif)`,\n        backgroundSize: 'cover',\n        color: '#fff',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(3)\n    },\n    sunny: {\n        minWidth: '100%',\n        minHeight: '100vh',\n        //backgroundImage: `url(https://i.gifer.com/Lx0q.gif)`,\n        backgroundImage: `url(https://i.gifer.com/g1vA.gif)`,\n        backgroundSize: 'cover',\n        color: '#fff',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(3)\n    },\n\n    img: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    itemDown: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    subItemDown: {\n        //borderBottom: '1px  solid #fff',\n        padding: theme.spacing(5),\n    },\n    subItemDown2: {\n        padding: theme.spacing(5),\n    },\n    icon: {\n        alignItems: 'up'\n    },\n    footer: {\n        position: 'fixed',\n        left: 0,\n        bottom: 0,\n        width: '100%',\n        padding: theme.spacing(1)\n    },\n    header: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: theme.spacing(1)\n    },\n    header2: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        padding: theme.spacing(1)\n    },\n    borderContainer: {\n        padding: theme.spacing(0.5),\n        border: '0.1rem solid #fff',\n        borderRadius: 10\n    }\n}))\n\nfunction App() {\n    const [nearestCity, setNearestCity] = useState<any>({})\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSm = useMediaQuery(theme.breakpoints.down('sm'));\n    const handleInit = async () => {\n        const data = await airHttp.getNearestCity()\n        setNearestCity(data)\n    }\n    const isRain = nearestCity.current?.weather?.hu >= 50;\n\n    useEffect(() => {\n        handleInit()\n    }, [])\n\n    return (\n        <Grid container className={isRain ? classes.rain : classes.sunny}>\n            <Grid item xs={12} md={6}>\n                <Grid item xs={12}>\n                    <Typography variant='h1' align=\"center\">\n                        {nearestCity.city}\n                    </Typography>\n                </Grid>\n                <Grid container className={classes.borderContainer}>\n                    <Grid item xs={12}>\n                        <Typography align=\"center\" variant='h6'>\n                            {moment(nearestCity.current?.weather?.ts).format('LLLL')}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='h1' align=\"center\">\n                            {nearestCity.current?.weather?.tp}°\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box className={classes.img}>\n                            <img src={`https://airvisual.com/images/${nearestCity.current?.weather?.ic}.png`}\n                                 width={isSm ? 200 : 300} height={isSm ? 200 : 300} alt=\"\"/>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={4} className={classes.itemDown}>\n                        <div className={classes.subItemDown}>\n                            <InvertColorsIcon className={classes.icon}/><br/>\n                            <span>Hu</span> <br/> {nearestCity.current?.weather?.hu} %\n                        </div>\n                    </Grid>\n                    <Grid item xs={4} className={classes.itemDown}>\n                        <div className={classes.subItemDown}>\n                            <span className=\"material-icons\">air</span><br/>\n                            <span>Ws</span> <br/>{nearestCity.current?.weather?.ws} m/s\n                        </div>\n\n                    </Grid>\n                    <Grid item xs={4} className={classes.itemDown}>\n                        <div className={classes.subItemDown}>\n                            <span className=\"material-icons\">ac_unit</span> <br/>\n                            <span>Pr</span> <br/>{nearestCity.current?.weather?.pr} hpa\n                        </div>\n                    </Grid>\n                    <div className=\"footer flex\">\n\n                    </div>\n                    <Grid item xs={12}>\n                        <Typography align=\"center\" className={classes.subItemDown2}>\n                            Your Location is: {nearestCity.location?.coordinates}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item className={classes.header2}>\n                <Typography variant='h2'>\n                    {nearestCity.country}\n                </Typography>\n            </Grid>\n            <Grid item className={classes.header}>\n                <Typography variant=\"h6\">Weather Application</Typography>\n            </Grid>\n            <Grid item className={classes.footer}>\n                <Typography variant=\"h6\">Power by - AirVisual API / Mike</Typography>\n            </Grid>\n\n        </Grid>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}